package softing.ubah4ukdev.nasaphotoday.domain.repository.notes

import android.graphics.Color
import android.util.Log
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.flow
import softing.ubah4ukdev.nasaphotoday.domain.model.notes.Note
import softing.ubah4ukdev.nasaphotoday.domain.repository.nasa.RepositoryResult
import softing.ubah4ukdev.nasaphotoday.domain.repository.nasa.Success
import java.util.*
import kotlin.collections.ArrayList
import kotlin.random.Random

/****
Project Nasa Photo Day
Package softing.ubah4ukdev.nasaphotoday.domain.repository.notes

Created by Ivan Sheynmaer

2021.07.21
v1.0
 */

/*
* Сделал замоканный репозиторий для заметок, т.к. непонятно пока нужны ли эти заметки
* в данном приложении. Поэтому пока не стал в базе хранить. Возможно позже сделаю.
*/

//TODO Реализовать репозиторий для хранения заметок в БД
object MockNotesRepositoryImpl : INotesRepository {

    //Количество генерируемых случайных заметок
    const val COUNT_GENERATE_NOTES = 50

    //Задержка для получения результата, имитация настоящего запроса
    const val DELAY_REQUEST = 300L

    private var notes: ArrayList<Note> = arrayListOf()
    private var calendar = Calendar.getInstance()

    private val colors: ArrayList<Int> =
        arrayListOf(Color.RED, Color.GREEN, Color.BLACK, Color.BLUE, Color.GRAY, Color.YELLOW)
    private val notesExample: ArrayList<String> = arrayListOf(
        "Предварительные выводы неутешительны: современная методология разработки позволяет оценить значение поставленных обществом задач. Прежде всего, современная методология разработки представляет собой интересный эксперимент проверки форм воздействия. Лишь стремящиеся вытеснить традиционное производство, нанотехнологии неоднозначны и будут разоблачены.Предварительные выводы неутешительны: современная методология разработки позволяет оценить значение поставленных обществом задач. Прежде всего, современная методология разработки представляет собой интересный эксперимент проверки форм воздействия. Лишь стремящиеся вытеснить традиционное производство, нанотехнологии неоднозначны и будут разоблачены.",
        "Имеется спорная точка зрения, гласящая примерно следующее: активно развивающиеся страны третьего мира являются только методом политического участия и описаны максимально подробно. Предварительные выводы неутешительны: глубокий уровень погружения обеспечивает актуальность экспериментов, поражающих по своей масштабности и грандиозности. Являясь всего лишь частью общей картины, явные признаки победы институционализации лишь добавляют фракционных разногласий и объективно рассмотрены соответствующими инстанциями.",
        "Имеется спорная точка зрения, гласящая примерно следующее: предприниматели в сети интернет лишь добавляют фракционных разногласий и подвергнуты целой серии независимых исследований. С учётом сложившейся международной обстановки, консультация с широким активом требует определения и уточнения форм воздействия. Лишь предприниматели в сети интернет представляют собой не что иное, как квинтэссенцию победы маркетинга над разумом и должны быть заблокированы в рамках своих собственных рациональных ограничений!",
        "Учитывая ключевые сценарии поведения, базовый вектор развития является качественно новой ступенью кластеризации усилий. Мы вынуждены отталкиваться от того, что постоянное информационно-пропагандистское обеспечение нашей деятельности не оставляет шанса для экономической целесообразности принимаемых решений. В рамках спецификации современных стандартов, диаграммы связей, инициированные исключительно синтетически, преданы социально-демократической анафеме.",
        "Противоположная точка зрения подразумевает, что ключевые особенности структуры проекта являются только методом политического участия и разоблачены. Учитывая ключевые сценарии поведения, современная методология разработки прекрасно подходит для реализации вывода текущих активов. Семантический разбор внешних противодействий представляет собой интересный эксперимент проверки благоприятных перспектив.",
        "Безусловно, внедрение современных методик позволяет выполнить важные задания по разработке укрепления моральных ценностей. Значимость этих проблем настолько очевидна, что реализация намеченных плановых заданий однозначно фиксирует необходимость новых предложений. А также действия представителей оппозиции могут быть своевременно верифицированы.",
        "Значимость этих проблем настолько очевидна, что постоянный количественный рост и сфера нашей активности влечет за собой процесс внедрения и модернизации всесторонне сбалансированных нововведений. Соображения высшего порядка, а также сложившаяся структура организации влечет за собой процесс внедрения и модернизации направлений прогрессивного развития. С другой стороны дальнейшее развитие различных форм деятельности представляет...",
        "С другой стороны начало повседневной работы по формированию позиции напрямую зависит от всесторонне сбалансированных нововведений. Разнообразный и богатый опыт курс на социально-ориентированный национальный проект обеспечивает актуальность дальнейших направлений развитая системы массового участия. Таким образом, выбранный нами инновационный путь играет важную роль в формировании новых предложений. С другой стороны курс на...",
        "Соображения высшего порядка, а также начало повседневной работы по формированию позиции требует определения и уточнения форм воздействия. Практический опыт показывает, что дальнейшее развитие различных форм деятельности позволяет оценить значение системы масштабного изменения ряда параметров. С другой стороны новая модель организационной деятельности играет важную роль в формировании существующих финансовых и административных...",
        "Равным образом реализация намеченного плана развития играет важную роль в формировании форм воздействия. Таким образом, повышение уровня гражданского сознания позволяет выполнить важнейшие задания по разработке системы обучения кадров, соответствующей насущным потребностям. Не следует, однако, забывать о том, что начало повседневной работы по формированию позиции требует определения и уточнения системы обучения..."
    )

    init {
        notesExample(COUNT_GENERATE_NOTES)
    }

    //Получение заметок
    override suspend fun notes(): Flow<RepositoryResult<ArrayList<Note>>> = flow {
        val result = ArrayList<Note>(notes.sortedBy { note: Note -> note.position }.toList())
        Thread.sleep(DELAY_REQUEST)
        emit(Success(result))
    }

    //Генерация заметок, пока нет настоящих, загруженных откуда-либо
    override fun notesExample(
        countGenerateNotes: Int
    ) {
        Log.d("nasaDebug", "notesExample start")
        for (i in 0 until countGenerateNotes) {
            calendar.add(Calendar.DATE, Random.nextInt(150))
            notes.add(
                Note(
                    i,
                    i,
                    Random.nextInt(9),
                    "Заметка № $i",
                    notesExample[Random.nextInt(9)],
                    calendar.timeInMillis,
                    calendar.timeInMillis,
                    colors[Random.nextInt(5)]
                )
            )
        }
    }

    //Изменение позиции заметки
    override suspend fun noteSetPosition(
        note: Note,
        newPosition: Int
    ): Flow<Boolean> = flow {
        //Log.d("nasaDebug", "before: ${notes[notes.indexOf(noteOld)].position}")
        notes[notes.indexOf(note)].position = newPosition
        //Log.d("nasaDebug", "after: ${notes[notes.indexOf(noteOld)].position}")
        emit(true)
    }

    //Удаление заметки
    override suspend fun noteDelete(target: Note): Flow<Boolean> = flow {
        if (notes.remove(target)) {
            emit(true)
        } else {
            emit(false)
        }
    }

    //Добавление заметки
    override suspend fun noteAdd(
        noteNew: Note
    ): Flow<RepositoryResult<Note>> = flow {
        val newNote = Note(
            notes.size,
            notes.size,
            Random.nextInt(9),
            "Заметка № ${notes.size}",
            notesExample[Random.nextInt(9)],
            calendar.timeInMillis,
            calendar.timeInMillis,
            colors[Random.nextInt(5)]
        )

        notes.add(
            newNote
        )

        Thread.sleep(DELAY_REQUEST)
        emit(Success(newNote))
    }
}